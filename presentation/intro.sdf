
## Problèmes avec les Dockerfile 🤔 .[steps]


// En tant que dev, on a beaucoup de sujets à traîter, les tests, la sécurité, la performance, la lisibilité, la maintenabilité, etc.
// Et on a pas forcément envie de passer du temps à comprendre comment fonctionne la création de conteneurs pour déployer nos projets.
// J'ai créé Dofigen pour essayer de simplifier la création de Dockerfile et de rendre cette tâche plus accessible.

/*
dev: beaucoup de sujets à traiter: tests, sécurité, performance, lisibilité, maintenabilité, etc.
pas le temps et l'envie de comprendre les conteneurs

Avant de commencer, Sondage

Pour ceux qui ne savent pas
le layer est un niveau de construction d'une image. équivalent d'un commit dans un git
un builder une image temporaire dans laquelle on peut faire des traîtement dont le résultat pourra être copié dans l'image finale
*/


Voici quelques problèmes que j'ai rencontré avec les Dockerfile

- Qui est développeur ?
- Qui a déjà écrit un Dockerfile ?
- Qui comprend le principe des layers et du cache de build dans Docker ?

/*
Next: Syntaxe des Dockerfile
*/

## Un nouveau "langage" à apprendre 🤯

Quand tu décides de faire ton premier Dockerfile

<img src="./bored-sigh.gif" style="width: 50vw;" />

/*
syntaxe en commandes

- pas envie, on dirait du Cobol
- pas simple d'analyser ou de modifier un Dockerfile via un script
*/

## Les Dockerfile sont souvent longs et complexes 📜

Quand tu lis un Dockerfile pour la première fois

<img src="./theoffice-michael-scott.gif" style="width: 50vw;" />

/*
les layers et builders pas toujours bien compris

Next: Une fois qu'on a réussi à créer son image Docker, on se rend compte qu'on a pas respecté les bonnes pratiques pour l'envoyer en prod
*/

## Pas de "bonnes pratiques" par défaut 😑

Quand tu envoies en prod

<img src="./silicon-valley-fire.gif" style="width: 50vw;" />

/*
root par défaut sur la plus part des images
.gitignore fonctionnent à l'inverse selon moi

Next: Comment Dofigen tente de répondre à ces problèmes
*/

## Comment Dofigen tente de répondre à ces problèmes .[steps]

/*
Pour Lenra, on voulait une solution simple pour les devs de créer des images Docker pour la prod.
J'ai créé Dofigen comme un projet à part et qui est utilisé comme dépendance du CLI de Lenra.

Dofigen: Docker file generator

- syntaxe: simple à lire et à écrire + facile à modifier via un script (yq, jq) + facile de voir les builders
- layers: ordre des définitions n'a pas d'importance (dans un même niveau) + Gestion de cache plus simple
- bonnes pratiques: rootless par défaut + `.gitignore` dans le même fichier et peut être défini par ajout  plutôt que suppression
*/

- Syntaxe en YAML (ou JSON) 📝
- Abstraction du concept de layers 📦
- Bonnes pratiques par défaut 😇
